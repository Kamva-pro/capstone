AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  SAM Template for Digital Self-Storage Solution

Globals:
  Function:
    Runtime: python3.9
    MemorySize: 128
    Timeout: 100
    Tracing: Active

Resources:
  ### DynamoDB Tables ###
  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${AWS::StackName}-Users
      AttributeDefinitions:
        - AttributeName: userid
          AttributeType: S
      KeySchema:
        - AttributeName: userid
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  StorageUnitsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${AWS::StackName}-StorageUnits
      AttributeDefinitions:
        - AttributeName: facilityId
          AttributeType: S
        - AttributeName: unitId
          AttributeType: S
      KeySchema:
        - AttributeName: facilityId
          KeyType: HASH
        - AttributeName: unitId
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST

  BillingTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${AWS::StackName}-Billing
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
        - AttributeName: paymentId
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
        - AttributeName: paymentId
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST

  NotificationsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${AWS::StackName}-Notifications
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
        - AttributeName: notificationId
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
        - AttributeName: notificationId
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST

  ### API Gateway ###
  RestAPI:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Cors:
        AllowMethods: "'GET,POST,PUT,DELETE'"
        AllowHeaders: "'Content-Type,Authorization'"
        AllowOrigin: "'*'"

  ### Lambda Functions ###
  UsersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: storage/users.lambda_handler
      Environment:
        Variables:
          USERS_TABLE: !Ref UsersTable
          STORAGE_UNITS_TABLE: !Ref StorageUnitsTable
          BILLING_TABLE: !Ref BillingTable
          NOTIFICATIONS_TABLE: !Ref NotificationsTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
        - DynamoDBCrudPolicy:
            TableName: !Ref StorageUnitsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref BillingTable
        - DynamoDBCrudPolicy:
            TableName: !Ref NotificationsTable
      Events:
        GetUsers:
          Type: Api
          Properties:
            RestApiId: !Ref RestAPI
            Path: /users
            Method: GET
        CreateUser:
          Type: Api
          Properties:
            RestApiId: !Ref RestAPI
            Path: /users
            Method: POST
        ListUnits:
          Type: Api
          Properties:
            RestApiId: !Ref RestAPI
            Path: /units
            Method: GET
        BookUnit:
          Type: Api
          Properties:
            RestApiId: !Ref RestAPI
            Path: /units/book
            Method: POST
        CancelBooking:
          Type: Api
          Properties:
            RestApiId: !Ref RestAPI
            Path: /units/cancel/{bookingId}
            Method: DELETE
        ManagePayment:
          Type: Api
          Properties:
            RestApiId: !Ref RestAPI
            Path: /payment
            Method: PUT
        ShareAccess:
          Type: Api
          Properties:
            RestApiId: !Ref RestAPI
            Path: /units/share
            Method: POST
        ListUnitsByStatus:
          Type: Api
          Properties:
            RestApiId: !Ref RestAPI
            Path: /support/units/status/{status}
            Method: GET
        UpdateUnitStatus:
          Type: Api
          Properties:
            RestApiId: !Ref RestAPI
            Path: /support/units/status
            Method: PUT

Outputs:
  ApiEndpoint:
    Description: API Gateway endpoint URL
    Value: !Sub https://${RestAPI}.execute-api.${AWS::Region}.amazonaws.com/prod
