AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

Resources:
  # DynamoDB Table for Storage Units
  StorageUnitsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: StorageUnits
      AttributeDefinitions:
        - AttributeName: facility_id
          AttributeType: S
        - AttributeName: unit_id
          AttributeType: S
      KeySchema:
        - AttributeName: facility_id
          KeyType: HASH
        - AttributeName: unit_id
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  # list_units Lambda Function
  ListUnitsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: storage/list_units.lambda_handler
      Runtime: python3.9
      CodeUri: src/
      MemorySize: 128
      Timeout: 10
      Environment:
        Variables:
          TABLE_NAME: !Ref StorageUnitsTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref StorageUnitsTable  # Attach DynamoDB access permissions
        - AWSLambdaBasicExecutionRole  # Add basic execution role for CloudWatch logging

  # book_unit Lambda Function
  BookUnitFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: storage/book_unit.lambda_handler
      Runtime: python3.9
      CodeUri: src/
      MemorySize: 128
      Timeout: 10
      Environment:
        Variables:
          TABLE_NAME: !Ref StorageUnitsTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref StorageUnitsTable  # Attach DynamoDB access permissions

  # cancel_unit Lambda Function
  CancelUnitFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: storage/cancel_unit.lambda_handler
      Runtime: python3.9
      CodeUri: src/
      MemorySize: 128
      Timeout: 10
      Environment:
        Variables:
          TABLE_NAME: !Ref StorageUnitsTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref StorageUnitsTable  # Attach DynamoDB access permissions

  # update_unit_status Lambda Function
  UpdateUnitStatusFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: storage/update_unit_status.lambda_handler
      Runtime: python3.9
      CodeUri: src/
      MemorySize: 128
      Timeout: 10
      Environment:
        Variables:
          TABLE_NAME: !Ref StorageUnitsTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref StorageUnitsTable  # Attach DynamoDB access permissions

  # GetUnitsApi (API for listing units)
  GetUnitsApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: GetUnitsApi
      StageName: prod
      DefinitionBody:
        swagger: '2.0'
        info:
          title: Storage Unit Management API - Get Units
          description: API for retrieving storage units.
          version: '1.0'
        paths:
          /units:
            get:
              summary: List all storage units
              operationId: listUnits
              consumes:
                - application/json
              produces:
                - application/json
              responses:
                "200":
                  description: A list of storage units
                  schema:
                    type: array
                    items:
                      type: object
                      properties:
                        facility_id:
                          type: string
                        unit_id:
                          type: string
                        status:
                          type: string
                        size:
                          type: string
                        customer_id:
                          type: string
                        booking_start_date:
                          type: string
                        booking_end_date:
                          type: string
                        facility_name:
                          type: string
              x-amazon-apigateway-integration:
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ListUnitsFunction.Arn}/invocations
                httpMethod: POST
                type: aws_proxy

  # BookUnitApi (API for booking a storage unit)
  BookUnitApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: BookUnitApi
      StageName: prod
      DefinitionBody:
        swagger: '2.0'
        info:
          title: Storage Unit Management API - Book Unit
          description: API for booking a storage unit.
          version: '1.0'
        paths:
          /units/book:
            post:
              summary: Book a storage unit
              operationId: bookUnit
              consumes:
                - application/json
              produces:
                - application/json
              responses:
                "200":
                  description: Unit booked successfully
                  schema:
                    type: object
                    properties:
                      message:
                        type: string
              x-amazon-apigateway-integration:
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${BookUnitFunction.Arn}/invocations
                httpMethod: POST
                type: aws_proxy

  # CancelUnitApi (API for canceling a storage unit booking)
  CancelUnitApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: CancelUnitApi
      StageName: prod
      DefinitionBody:
        swagger: '2.0'
        info:
          title: Storage Unit Management API - Cancel Unit
          description: API for canceling a storage unit booking.
          version: '1.0'
        paths:
          /units/cancel:
            post:
              summary: Cancel a storage unit booking
              operationId: cancelUnit
              consumes:
                - application/json
              produces:
                - application/json
              responses:
                "200":
                  description: Unit cancellation processed
                  schema:
                    type: object
                    properties:
                      message:
                        type: string
              x-amazon-apigateway-integration:
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CancelUnitFunction.Arn}/invocations
                httpMethod: POST
                type: aws_proxy

  # UpdateUnitStatusApi (API for updating unit status)
  UpdateUnitStatusApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: UpdateUnitStatusApi
      StageName: prod
      DefinitionBody:
        swagger: '2.0'
        info:
          title: Storage Unit Management API - Update Status
          description: API for updating the status of a storage unit.
          version: '1.0'
        paths:
          /units/status:
            patch:
              summary: Update the status of a unit
              operationId: updateUnitStatus
              consumes:
                - application/json
              produces:
                - application/json
              responses:
                "200":
                  description: Status updated successfully
                  schema:
                    type: object
                    properties:
                      message:
                        type: string
              x-amazon-apigateway-integration:
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UpdateUnitStatusFunction.Arn}/invocations
                httpMethod: POST
                type: aws_proxy

Outputs:
  GetUnitsApiUrl:
    Description: "URL for the GetUnits API"
    Value:
      Fn::Sub: "https://${GetUnitsApi}.execute-api.${AWS::Region}.amazonaws.com/prod/units"

  BookUnitApiUrl:
    Description: "URL for the BookUnit API"
    Value:
      Fn::Sub: "https://${BookUnitApi}.execute-api.${AWS::Region}.amazonaws.com/prod/units/book"

  CancelUnitApiUrl:
    Description: "URL for the CancelUnit API"
    Value:
      Fn::Sub: "https://${CancelUnitApi}.execute-api.${AWS::Region}.amazonaws.com/prod/units/cancel"

  UpdateUnitStatusApiUrl:
    Description: "URL for the UpdateUnitStatus API"
    Value:
      Fn::Sub: "https://${UpdateUnitStatusApi}.execute-api.${AWS::Region}.amazonaws.com/prod/units/status"
